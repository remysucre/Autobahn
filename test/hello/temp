[1 of 1] Compiling Main             ( helloopt.hs, helloopt.o )
Linking helloopt ...
4d3
< 
8,14c7,11
< 
< main = do
<   as <- getArgs
<   let a = read $ head as :: Int
<   putStrLn $ show a
<   putStrLn $ show $ fib a
< 
---
> main
>   = do as <- getArgs
>        let (!a) = read $ head as :: Int
>        putStrLn $ show a
>        putStrLn $ show $ fib a
\ No newline at end of file
[1 of 1] Compiling Main             ( helloopt.hs, helloopt.o )
Linking helloopt ...
4d3
< 
8,14c7,11
< 
< main = do
<   as <- getArgs
<   let a = read $ head as :: Int
<   putStrLn $ show a
<   putStrLn $ show $ fib a
< 
---
> main
>   = do as <- getArgs
>        let a = read $ head as :: Int
>        putStrLn $ show a
>        putStrLn $ show $ fib a
\ No newline at end of file
[1 of 1] Compiling Main             ( helloopt.hs, helloopt.o )
Linking helloopt ...
4d3
< 
8,14c7,11
< 
< main = do
<   as <- getArgs
<   let a = read $ head as :: Int
<   putStrLn $ show a
<   putStrLn $ show $ fib a
< 
---
> main
>   = do (!as) <- getArgs
>        let a = read $ head as :: Int
>        putStrLn $ show a
>        putStrLn $ show $ fib a
\ No newline at end of file
[1 of 1] Compiling Main             ( helloopt.hs, helloopt.o )
Linking helloopt ...
4d3
< 
8,14c7,11
< 
< main = do
<   as <- getArgs
<   let a = read $ head as :: Int
<   putStrLn $ show a
<   putStrLn $ show $ fib a
< 
---
> main
>   = do as <- getArgs
>        let a = read $ head as :: Int
>        putStrLn $ show a
>        putStrLn $ show $ fib a
\ No newline at end of file
[1 of 1] Compiling Main             ( helloopt.hs, helloopt.o )
Linking helloopt ...
4d3
< 
8,14c7,11
< 
< main = do
<   as <- getArgs
<   let a = read $ head as :: Int
<   putStrLn $ show a
<   putStrLn $ show $ fib a
< 
---
> main
>   = do as <- getArgs
>        let a = read $ head as :: Int
>        putStrLn $ show a
>        putStrLn $ show $ fib a
\ No newline at end of file
[1 of 1] Compiling Main             ( helloopt.hs, helloopt.o )
Linking helloopt ...
4d3
< 
8,14c7,11
< 
< main = do
<   as <- getArgs
<   let a = read $ head as :: Int
<   putStrLn $ show a
<   putStrLn $ show $ fib a
< 
---
> main
>   = do as <- getArgs
>        let a = read $ head as :: Int
>        putStrLn $ show a
>        putStrLn $ show $ fib a
\ No newline at end of file
[1 of 1] Compiling Main             ( helloopt.hs, helloopt.o )
Linking helloopt ...
4d3
< 
7,14c6,11
< fib n = (+) (fib $ n - 1) (fib $ n - 2)
< 
< main = do
<   as <- getArgs
<   let a = read $ head as :: Int
<   putStrLn $ show a
<   putStrLn $ show $ fib a
< 
---
> fib (!n) = (+) (fib $ n - 1) (fib $ n - 2)
> main
>   = do as <- getArgs
>        let a = read $ head as :: Int
>        putStrLn $ show a
>        putStrLn $ show $ fib a
\ No newline at end of file
[1 of 1] Compiling Main             ( helloopt.hs, helloopt.o )
Linking helloopt ...
4d3
< 
8,14c7,11
< 
< main = do
<   as <- getArgs
<   let a = read $ head as :: Int
<   putStrLn $ show a
<   putStrLn $ show $ fib a
< 
---
> main
>   = do as <- getArgs
>        let a = read $ head as :: Int
>        putStrLn $ show a
>        putStrLn $ show $ fib a
\ No newline at end of file
[1 of 1] Compiling Main             ( helloopt.hs, helloopt.o )
Linking helloopt ...
4d3
< 
6c5
< fib 1 = 1
---
> fib (!1) = 1
8,14c7,11
< 
< main = do
<   as <- getArgs
<   let a = read $ head as :: Int
<   putStrLn $ show a
<   putStrLn $ show $ fib a
< 
---
> main
>   = do as <- getArgs
>        let a = read $ head as :: Int
>        putStrLn $ show a
>        putStrLn $ show $ fib a
\ No newline at end of file
[1 of 1] Compiling Main             ( helloopt.hs, helloopt.o )
Linking helloopt ...
4d3
< 
8,14c7,11
< 
< main = do
<   as <- getArgs
<   let a = read $ head as :: Int
<   putStrLn $ show a
<   putStrLn $ show $ fib a
< 
---
> main
>   = do as <- getArgs
>        let a = read $ head as :: Int
>        putStrLn $ show a
>        putStrLn $ show $ fib a
\ No newline at end of file
[1 of 1] Compiling Main             ( helloopt.hs, helloopt.o )
Linking helloopt ...
4,5c4
< 
< fib 0 = 1
---
> fib (!0) = 1
8,14c7,11
< 
< main = do
<   as <- getArgs
<   let a = read $ head as :: Int
<   putStrLn $ show a
<   putStrLn $ show $ fib a
< 
---
> main
>   = do as <- getArgs
>        let a = read $ head as :: Int
>        putStrLn $ show a
>        putStrLn $ show $ fib a
\ No newline at end of file
[1 of 1] Compiling Main             ( helloopt.hs, helloopt.o )
Linking helloopt ...
4d3
< 
8,14c7,11
< 
< main = do
<   as <- getArgs
<   let a = read $ head as :: Int
<   putStrLn $ show a
<   putStrLn $ show $ fib a
< 
---
> main
>   = do as <- getArgs
>        let a = read $ head as :: Int
>        putStrLn $ show a
>        putStrLn $ show $ fib a
\ No newline at end of file
[1 of 1] Compiling Main             ( helloopt.hs, helloopt.o )
Linking helloopt ...
4d3
< 
8,14c7,11
< 
< main = do
<   as <- getArgs
<   let a = read $ head as :: Int
<   putStrLn $ show a
<   putStrLn $ show $ fib a
< 
---
> main
>   = do as <- getArgs
>        let a = read $ head as :: Int
>        putStrLn $ show a
>        putStrLn $ show $ fib a
\ No newline at end of file
[1 of 1] Compiling Main             ( helloopt.hs, helloopt.o )
Linking helloopt ...
4d3
< 
8,14c7,11
< 
< main = do
<   as <- getArgs
<   let a = read $ head as :: Int
<   putStrLn $ show a
<   putStrLn $ show $ fib a
< 
---
> main
>   = do as <- getArgs
>        let a = read $ head as :: Int
>        putStrLn $ show a
>        putStrLn $ show $ fib a
\ No newline at end of file
[False,False,False,False,False,False]
bangs are [False,False,False,False,False,True]
bangs are [False,False,False,False,False,False]
bangs are [False,False,False,False,True,False]
bangs are [False,False,False,False,False,False]
bangs are [False,False,False,True,False,False]
bangs are [False,False,False,False,False,False]
bangs are [False,False,True,False,False,False]
bangs are [False,False,False,False,False,False]
bangs are [False,True,False,False,False,False]
bangs are [False,False,False,False,False,False]
bangs are [True,False,False,False,False,False]
bangs are [False,False,False,False,False,False]
bangs are [False,False,False,False,False,False]
bangs are [False,False,False,False,False,False]
[(False,[False,False,False,False,False,True]),(False,[False,False,False,False,True,False]),(False,[False,False,False,True,False,False]),(False,[False,False,True,False,False,False]),(False,[False,True,False,False,False,False]),(False,[True,False,False,False,False,False]),(False,[False,False,False,False,False,False])]
