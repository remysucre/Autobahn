
==================== Renamer ====================
Dum.returnM :: x_azx -> Maybe x_azx
Dum.returnM x_azy = Just x_azy
Dum.eachM :: Maybe x_azv -> (x_azv -> y_azw) -> Maybe y_azw
Dum.eachM ((!(Just x_azz))) (!f_azA) = Just (f_azA x_azz)
Dum.eachM Nothing (!f_azB) = Nothing
Dum.thenM :: Maybe x_azt -> (x_azt -> Maybe y_azu) -> Maybe y_azu
Dum.thenM ((!(Just x_azC))) kM_azD = kM_azD x_azC
Dum.thenM Nothing (!kM_azE) = Nothing
Dum.failM :: Maybe x_azs
Dum.failM = Nothing
Dum.orM :: Maybe x_azr -> Maybe x_azr -> Maybe x_azr
Dum.orM (Just x_azF) yM_azG = Just x_azF
Dum.orM Nothing (!yM_azH) = yM_azH
Dum.guardM :: Bool -> Maybe x_azq -> Maybe x_azq
Dum.guardM (!b_azI) (!xM_azJ) = if b_azI then xM_azJ else Dum.failM
Dum.filterM :: (x_azp -> Bool) -> Maybe x_azp -> Maybe x_azp
Dum.filterM p_azK xM_azL
  = xM_azL
    `Dum.thenM`
      (\ (!x_azM) -> p_azK x_azM `Dum.guardM` Dum.returnM x_azM)
Dum.theM :: Maybe x_azo -> x_azo
Dum.theM (!((!(Just x_azN)))) = x_azN
Dum.existsM :: Maybe x_asj -> Bool
Dum.existsM ((!(Just x_azO))) = True
Dum.existsM Nothing = False
Dum.useM :: x_asi -> Maybe x_asi -> x_asi
Dum.useM xfail_azP ((!(Just (!x_azQ)))) = x_azQ
Dum.useM xfail_azR (!Nothing) = xfail_azR

