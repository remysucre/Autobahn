
==================== Demand analysis ====================
2017-02-15 13:06:24.722127 UTC

Result size of Demand analysis
  = {terms: 84, types: 113, coercions: 0}

-- RHS size: {terms: 1, types: 0, coercions: 0}
lvl_s2d0 :: Integer
[LclId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 100 0}]
lvl_s2d0 = 1

-- RHS size: {terms: 1, types: 0, coercions: 0}
lvl_s2d1 :: Integer
[LclId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 100 0}]
lvl_s2d1 = 1

-- RHS size: {terms: 37, types: 27, coercions: 0}
tick
  :: forall a_aSg t_aSj a_aSF.
     (Num a_aSF, Num t_aSj, Integral a_aSg) =>
     a_aSg -> a_aSF -> t_aSj -> (a_aSF, t_aSj)
[LclIdX,
 Arity=6,
 Str=DmdType <L,U(1*C1(C1(U)),A,A,A,A,A,1*C1(U))><L,U(1*C1(C1(U)),A,A,A,A,A,1*C1(U))><S(SLLLLLLLL),U(U,A,A,C(C1(U)),A,A,A,A,A)><L,U><S,1*U><S,1*U>m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [60 60 0 0 20 20] 230 60}]
tick =
  \ (@ a_aSg)
    (@ t_aSj)
    (@ a_aSF)
    ($dNum_a2ac [Dmd=<L,U(1*C1(C1(U)),A,A,A,A,A,1*C1(U))>]
       :: Num a_aSF)
    ($dNum_a2ad [Dmd=<L,U(1*C1(C1(U)),A,A,A,A,A,1*C1(U))>]
       :: Num t_aSj)
    ($dIntegral_a2ae [Dmd=<S(SLLLLLLLL),U(U,A,A,C(C1(U)),A,A,A,A,A)>]
       :: Integral a_aSg)
    (x_axF :: a_aSg)
    (c0_axG [Dmd=<S,1*U>] :: a_aSF)
    (c1_axH [Dmd=<S,1*U>] :: t_aSj) ->
    case c0_axG of c0_XxQ { __DEFAULT ->
    case c1_axH of c1_XxS { __DEFAULT ->
    case even @ a_aSg $dIntegral_a2ae x_axF
    of _ [Occ=Dead, Dmd=<L,A>] {
      False ->
        (+ @ a_aSF
           $dNum_a2ac
           c0_XxQ
           (fromInteger @ a_aSF $dNum_a2ac lvl_s2d0),
         c1_XxS);
      True ->
        (c0_XxQ,
         + @ t_aSj
           $dNum_a2ad
           c1_XxS
           (fromInteger @ t_aSj $dNum_a2ad lvl_s2d1))
    }
    }
    }

-- RHS size: {terms: 31, types: 43, coercions: 0}
f :: forall a_a2b2 t_a2b3 a_a2b4.
     (Num a_a2b4, Num t_a2b3, Integral a_a2b2) =>
     [a_a2b2] -> (a_a2b4, t_a2b3) -> (a_a2b4, t_a2b3)
[LclIdX,
 Arity=5,
 Str=DmdType <L,U(C(C1(U)),A,A,A,A,A,C(U))><L,U(C(C1(U)),A,A,A,A,A,C(U))><L,U(U,A,A,C(C1(U)),A,A,A,A,A)><S,1*U><S,1*U(U,U)>m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 0 0 0] 190 0}]
f =
  \ (@ a_a2b2)
    (@ t_a2b3)
    (@ a_a2b4)
    ($dNum_a2ba [Dmd=<L,U(C(C1(U)),A,A,A,A,A,C(U))>] :: Num a_a2b4)
    ($dNum_a2bb [Dmd=<L,U(C(C1(U)),A,A,A,A,A,C(U))>] :: Num t_a2b3)
    ($dIntegral_a2bc [Dmd=<L,U(U,A,A,C(C1(U)),A,A,A,A,A)>]
       :: Integral a_a2b2)
    (eta_B2 [Dmd=<S,1*U>] :: [a_a2b2])
    (eta_B1 [Dmd=<S,1*U(U,U)>] :: (a_a2b4, t_a2b3)) ->
    letrec {
      f_s2cY [Occ=LoopBreaker]
        :: [a_a2b2] -> (a_a2b4, t_a2b3) -> (a_a2b4, t_a2b3)
      [LclId,
       Arity=2,
       CallArity=2,
       Str=DmdType <S,1*U><S,1*U(U,U)>m,
       Unf=Unf{Src=<vanilla>, TopLvl=False, Value=True, ConLike=True,
               WorkFree=True, Expandable=True, Guidance=IF_ARGS [30 20] 130 0}]
      f_s2cY =
        \ (ds_d2c2 [Dmd=<S,1*U>] :: [a_a2b2])
          (c_aql [Dmd=<S,1*U(U,U)>] :: (a_a2b4, t_a2b3)) ->
          case ds_d2c2 of _ [Occ=Dead, Dmd=<L,A>] {
            [] -> c_aql;
            : ipv_s2cF ipv_s2cK [Dmd=<S,1*U>] ->
              case c_aql
              of _ [Occ=Dead, Dmd=<L,A>]
              { (ipv_s2cN [Dmd=<S,1*U>], ipv_s2cO [Dmd=<S,1*U>]) ->
              f_s2cY
                ipv_s2cK
                (tick
                   @ a_a2b2
                   @ t_a2b3
                   @ a_a2b4
                   $dNum_a2ba
                   $dNum_a2bb
                   $dIntegral_a2bc
                   ipv_s2cF
                   ipv_s2cN
                   ipv_s2cO)
              }
          }; } in
    f_s2cY eta_B2 eta_B1

-- RHS size: {terms: 2, types: 0, coercions: 0}
$trModule_s2cQ :: GHC.Types.TrName
[LclId,
 Str=DmdType m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 20}]
$trModule_s2cQ = GHC.Types.TrNameS "main"#

-- RHS size: {terms: 2, types: 0, coercions: 0}
$trModule_s2cR :: GHC.Types.TrName
[LclId,
 Str=DmdType m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 20}]
$trModule_s2cR = GHC.Types.TrNameS "Dum"#

-- RHS size: {terms: 3, types: 0, coercions: 0}
Dum.$trModule :: GHC.Types.Module
[LclIdX,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
Dum.$trModule = GHC.Types.Module $trModule_s2cQ $trModule_s2cR


